import os
import random
import sys
import logging
import re
import datetime
import sklearn
from sklearn.feature_extraction.text import CountVectorizer

#corpus = [
#    "[Byte[]]$var_code = [System.Convert]::FromBase64String(\"/OiJAAAAYInlMdJ..ENUFF_IS_ENUFF_I_QUIT..jEwOAA=\")",
#    ]

pathList = ["D:\\Malware\\PowerShell_malicious"] # "samples_malicious",
for folderPath in pathList:
    fileList = os.listdir(folderPath)
    random.shuffle(fileList)
    for file in fileList:
        # corpus.append(open(os.path.join(folderPath,file),).read())

        try:
            code = open(os.path.join(folderPath,file)).read()
        except:
            code = open(os.path.join(folderPath,file), encoding='utf-16').read()

        for line in code.split():
            if len(line) < 50:
                print(line)

        vectorizer = CountVectorizer()
        X = vectorizer.fit_transform([code])
        something = vectorizer.get_feature_names_out()
        #print("Length: ", len(something))
        #print(something)
        # X.toarray()

        print("")
        vocab_list = []
        for line in open("vocab_powershell.txt").readlines():
            if line.startswith("#"):
                continue
            tempLine = line.lower().strip()
            vocab_list.append(tempLine)
        if '' in vocab_list:
            vocab_list.remove('')
        if " " in vocab_list:
            vocab_list.remove(" ")
        vocab_list = list(set(vocab_list))


        vectorizer = CountVectorizer(vocabulary=vocab_list)
        X2 = vectorizer.fit_transform([code])
        something2 = vectorizer.get_feature_names_out()
        #print("Length: ", len(something2))
        #print(something2)

        print("Not going to be captured: ")
        for word in something:
            if len(word) < 20:
                if word not in something2:
                    print(word)
        input(f"File {file}. Press Enter to Proceed")

# TODO: afer CountVectorizer() combine
#  encoded/encodedcommand
# -NonI – shorthand for -NonInteractive
# -W Hidden – shorthand for “-WindowStyle Hidden”